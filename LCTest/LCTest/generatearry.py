import numpy as np
import random


def generate_regular_graph(num_nodes, degree):
    """
    ????????????,????????????

    num_nodes: ??????
    degree: ???????
    """
    if degree >= num_nodes:
        raise ValueError("??????????????")

    # ???????
    adj_matrix = np.zeros((num_nodes, num_nodes), dtype=np.int8)

    # ???????????? degree ??
    for i in range(num_nodes):
        neighbors = random.sample(range(num_nodes), degree)
        for neighbor in neighbors:
            adj_matrix[i, neighbor] = 1
            adj_matrix[neighbor, i] = 1  # ???,????

    return adj_matrix


def save_adj_matrix_npy(matrix, filename):
    """
    ????????????? .npy ????

    matrix: ???????
    filename: ???????
    """
    np.save(filename, matrix)

num_nodes = 33000  # ???5????
degree = 10  # ????????10

# ?????
adj_matrix = generate_regular_graph(num_nodes, degree)

# ?????
save_adj_matrix_npy(adj_matrix, "regular_graph_adj_matrix.npy")